server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    root /shop/web;
    index index.php index.html;

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;


    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    location ~ /\.ht {
        deny all;
    }

    location ~ /(lib|src) {
        deny all;
        return 403;
    }


    #################################################
    # CONFIGURAZIONE PERCORSO WEB
    #################################################
    location / {
        # passa tutte le richiesta alla pagina index.php
        # $arg permette di avere anche le GET  VARIABLES.
        try_files $uri $uri/ /index.php?$args;
        error_page 404 /index.php;
    }

    ################################################
    # PHP-FPM Configuration Nginx
    ################################################
    location ~ \.php$ {
        include fastcgi_params;

        try_files $uri $uri/ /index.php?$args;
        error_page 404 /index.php;


        # "php" Ã¨ il nome del service di docker, come anche la porta 9000
        fastcgi_pass php:9000;

        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param REQUEST_URI $request_uri;
    }


    #################################################
    # CONFIGURAZIONE PERCORSO ANGULAR
    #################################################
    location ~ (^/admin|^/account|^/shop) {
        root /shop/apps;
        try_files $uri $uri/ /$1/index.html =404;
    }


    #################################################
    # REVERSE PROXY PER IL BACKEND API
    #################################################
    location /api/ {
        add_header X-Served-By $host;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Scheme $scheme;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_pass http://api:8000/;
    }

}
